{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientConstructors", "EnumSetterOverload", "ClientMutationMethods" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : false
  },
  "metadata" : {
    "apiVersion" : "2018-04-02",
    "asyncClient" : "AWSEC2InstanceConnectAsyncClient",
    "asyncClientBuilderClassName" : "AWSEC2InstanceConnectAsyncClientBuilder",
    "asyncInterface" : "AWSEC2InstanceConnectAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : null,
    "cucumberModuleInjectorClassName" : "AWSEC2InstanceConnectModuleInjector",
    "defaultEndpoint" : "ec2-instance-connect.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "ec2-instance-connect.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p>AWS EC2 Connect Service is a service that enables system administrators to publish temporary SSH keys to their EC2 instances in order to establish connections to their instances without leaving a permanent authentication option.</p>",
    "endpointPrefix" : "ec2-instance-connect",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.ec2instanceconnect",
    "packagePath" : "com/amazonaws/services/ec2instanceconnect",
    "protocol" : "json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "EC2 Instance Connect",
    "serviceFullName" : "AWS EC2 Instance Connect",
    "serviceId" : "EC2 Instance Connect",
    "serviceName" : "EC2 Instance Connect",
    "signingName" : "ec2-instance-connect",
    "smokeTestsPackageName" : "com.amazonaws.services.ec2instanceconnect.smoketests",
    "syncClient" : "AWSEC2InstanceConnectClient",
    "syncClientBuilderClassName" : "AWSEC2InstanceConnectClientBuilder",
    "syncInterface" : "AWSEC2InstanceConnect",
    "uid" : "ec2-instance-connect-2018-04-02",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "SendSSHPublicKey" : {
      "asyncCallableType" : "java.util.concurrent.Callable<SendSSHPublicKeyResult>",
      "asyncFutureType" : "java.util.concurrent.Future<SendSSHPublicKeyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SendSSHPublicKeyRequest, SendSSHPublicKeyResult>",
      "asyncReturnType" : "SendSSHPublicKeyResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Pushes an SSH public key to a particular OS user on a given EC2 instance for 60 seconds.</p>",
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AuthException",
        "documentation" : "<p>Indicates that either your AWS credentials are invalid or you do not have access to the EC2 instance.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "InvalidArgsException",
        "documentation" : "<p>Indicates that you provided bad input. Ensure you have a valid instance ID, the correct zone, and a valid SSH public key.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ServiceException",
        "documentation" : "<p>Indicates that the service encountered an error. Follow the message's instructions and try again.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Indicates you have been making requests too frequently and have been throttled. Wait for a while and try again. If higher call volume is warranted contact AWS Support.</p>",
        "httpStatusCode" : null
      }, {
        "exceptionName" : "EC2InstanceNotFoundException",
        "documentation" : "<p>Indicates that the instance requested was not found in the given zone. Check that you have provided a valid instance ID and the correct zone.</p>",
        "httpStatusCode" : null
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SendSSHPublicKeyRequest",
        "variableName" : "sendSSHPublicKeyRequest",
        "variableType" : "SendSSHPublicKeyRequest",
        "documentation" : "",
        "simpleType" : "SendSSHPublicKeyRequest",
        "variableSetterType" : "SendSSHPublicKeyRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "sendSSHPublicKey",
      "operationName" : "SendSSHPublicKey",
      "returnType" : {
        "returnType" : "SendSSHPublicKeyResult",
        "documentation" : null
      },
      "syncReturnType" : "SendSSHPublicKeyResult"
    }
  },
  "shapes" : {
    "AuthException" : {
      "c2jName" : "AuthException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates that either your AWS credentials are invalid or you do not have access to the EC2 instance.</p>",
      "enums" : null,
      "errorCode" : "AuthException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AuthException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AuthException",
        "variableName" : "authException",
        "variableType" : "AuthException",
        "documentation" : null,
        "simpleType" : "AuthException",
        "variableSetterType" : "AuthException"
      },
      "wrapper" : false
    },
    "EC2InstanceNotFoundException" : {
      "c2jName" : "EC2InstanceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates that the instance requested was not found in the given zone. Check that you have provided a valid instance ID and the correct zone.</p>",
      "enums" : null,
      "errorCode" : "EC2InstanceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "EC2InstanceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "EC2InstanceNotFoundException",
        "variableName" : "eC2InstanceNotFoundException",
        "variableType" : "EC2InstanceNotFoundException",
        "documentation" : null,
        "simpleType" : "EC2InstanceNotFoundException",
        "variableSetterType" : "EC2InstanceNotFoundException"
      },
      "wrapper" : false
    },
    "InvalidArgsException" : {
      "c2jName" : "InvalidArgsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates that you provided bad input. Ensure you have a valid instance ID, the correct zone, and a valid SSH public key.</p>",
      "enums" : null,
      "errorCode" : "InvalidArgsException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InvalidArgsException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvalidArgsException",
        "variableName" : "invalidArgsException",
        "variableType" : "InvalidArgsException",
        "documentation" : null,
        "simpleType" : "InvalidArgsException",
        "variableSetterType" : "InvalidArgsException"
      },
      "wrapper" : false
    },
    "SendSSHPublicKeyRequest" : {
      "c2jName" : "SendSSHPublicKeyRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "SendSSHPublicKey",
        "locationName" : null,
        "requestUri" : "/",
        "target" : "AWSEC2InstanceConnectService.SendSSHPublicKey",
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "InstanceId",
        "c2jShape" : "InstanceId",
        "deprecated" : false,
        "documentation" : "<p>The EC2 instance you wish to publish the SSH key to.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@param instanceId The EC2 instance you wish to publish the SSH key to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInstanceId",
        "getterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@return The EC2 instance you wish to publish the SSH key to.*/",
        "getterMethodName" : "getInstanceId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "InstanceId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "InstanceId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InstanceId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@param instanceId The EC2 instance you wish to publish the SSH key to.*/",
        "setterMethodName" : "setInstanceId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "instanceId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@param instanceId The EC2 instance you wish to publish the SSH key to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "instanceId",
          "variableType" : "String",
          "documentation" : "<p>The EC2 instance you wish to publish the SSH key to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "InstanceOSUser",
        "c2jShape" : "InstanceOSUser",
        "deprecated" : false,
        "documentation" : "<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@param instanceOSUser The OS user on the EC2 instance whom the key may be used to authenticate as.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInstanceOSUser",
        "getterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@return The OS user on the EC2 instance whom the key may be used to authenticate as.*/",
        "getterMethodName" : "getInstanceOSUser",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "InstanceOSUser",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "InstanceOSUser",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InstanceOSUser",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@param instanceOSUser The OS user on the EC2 instance whom the key may be used to authenticate as.*/",
        "setterMethodName" : "setInstanceOSUser",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "instanceOSUser",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@param instanceOSUser The OS user on the EC2 instance whom the key may be used to authenticate as.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "instanceOSUser",
          "variableType" : "String",
          "documentation" : "<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "SSHPublicKey",
        "c2jShape" : "SSHPublicKey",
        "deprecated" : false,
        "documentation" : "<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@param sSHPublicKey The public key to be published to the instance. To use it after publication you must have the matching private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSSHPublicKey",
        "getterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@return The public key to be published to the instance. To use it after publication you must have the matching private key.*/",
        "getterMethodName" : "getSSHPublicKey",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "SSHPublicKey",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "SSHPublicKey",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SSHPublicKey",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@param sSHPublicKey The public key to be published to the instance. To use it after publication you must have the matching private key.*/",
        "setterMethodName" : "setSSHPublicKey",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sSHPublicKey",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@param sSHPublicKey The public key to be published to the instance. To use it after publication you must have the matching private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sSHPublicKey",
          "variableType" : "String",
          "documentation" : "<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "AvailabilityZone",
        "c2jShape" : "AvailabilityZone",
        "deprecated" : false,
        "documentation" : "<p>The availability zone the EC2 instance was launched in.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@param availabilityZone The availability zone the EC2 instance was launched in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAvailabilityZone",
        "getterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@return The availability zone the EC2 instance was launched in.*/",
        "getterMethodName" : "getAvailabilityZone",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "AvailabilityZone",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "AvailabilityZone",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AvailabilityZone",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@param availabilityZone The availability zone the EC2 instance was launched in.*/",
        "setterMethodName" : "setAvailabilityZone",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "availabilityZone",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@param availabilityZone The availability zone the EC2 instance was launched in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "availabilityZone",
          "variableType" : "String",
          "documentation" : "<p>The availability zone the EC2 instance was launched in.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AvailabilityZone" : {
          "c2jName" : "AvailabilityZone",
          "c2jShape" : "AvailabilityZone",
          "deprecated" : false,
          "documentation" : "<p>The availability zone the EC2 instance was launched in.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@param availabilityZone The availability zone the EC2 instance was launched in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAvailabilityZone",
          "getterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@return The availability zone the EC2 instance was launched in.*/",
          "getterMethodName" : "getAvailabilityZone",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "AvailabilityZone",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "AvailabilityZone",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AvailabilityZone",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@param availabilityZone The availability zone the EC2 instance was launched in.*/",
          "setterMethodName" : "setAvailabilityZone",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "availabilityZone",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The availability zone the EC2 instance was launched in.</p>\n@param availabilityZone The availability zone the EC2 instance was launched in.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "availabilityZone",
            "variableType" : "String",
            "documentation" : "<p>The availability zone the EC2 instance was launched in.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "InstanceId" : {
          "c2jName" : "InstanceId",
          "c2jShape" : "InstanceId",
          "deprecated" : false,
          "documentation" : "<p>The EC2 instance you wish to publish the SSH key to.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@param instanceId The EC2 instance you wish to publish the SSH key to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInstanceId",
          "getterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@return The EC2 instance you wish to publish the SSH key to.*/",
          "getterMethodName" : "getInstanceId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "InstanceId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "InstanceId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InstanceId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@param instanceId The EC2 instance you wish to publish the SSH key to.*/",
          "setterMethodName" : "setInstanceId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "instanceId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The EC2 instance you wish to publish the SSH key to.</p>\n@param instanceId The EC2 instance you wish to publish the SSH key to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "instanceId",
            "variableType" : "String",
            "documentation" : "<p>The EC2 instance you wish to publish the SSH key to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "InstanceOSUser" : {
          "c2jName" : "InstanceOSUser",
          "c2jShape" : "InstanceOSUser",
          "deprecated" : false,
          "documentation" : "<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@param instanceOSUser The OS user on the EC2 instance whom the key may be used to authenticate as.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInstanceOSUser",
          "getterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@return The OS user on the EC2 instance whom the key may be used to authenticate as.*/",
          "getterMethodName" : "getInstanceOSUser",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "InstanceOSUser",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "InstanceOSUser",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InstanceOSUser",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@param instanceOSUser The OS user on the EC2 instance whom the key may be used to authenticate as.*/",
          "setterMethodName" : "setInstanceOSUser",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "instanceOSUser",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>\n@param instanceOSUser The OS user on the EC2 instance whom the key may be used to authenticate as.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "instanceOSUser",
            "variableType" : "String",
            "documentation" : "<p>The OS user on the EC2 instance whom the key may be used to authenticate as.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SSHPublicKey" : {
          "c2jName" : "SSHPublicKey",
          "c2jShape" : "SSHPublicKey",
          "deprecated" : false,
          "documentation" : "<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@param sSHPublicKey The public key to be published to the instance. To use it after publication you must have the matching private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSSHPublicKey",
          "getterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@return The public key to be published to the instance. To use it after publication you must have the matching private key.*/",
          "getterMethodName" : "getSSHPublicKey",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "SSHPublicKey",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "SSHPublicKey",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SSHPublicKey",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@param sSHPublicKey The public key to be published to the instance. To use it after publication you must have the matching private key.*/",
          "setterMethodName" : "setSSHPublicKey",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sSHPublicKey",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>\n@param sSHPublicKey The public key to be published to the instance. To use it after publication you must have the matching private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sSHPublicKey",
            "variableType" : "String",
            "documentation" : "<p>The public key to be published to the instance. To use it after publication you must have the matching private key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "InstanceId", "InstanceOSUser", "SSHPublicKey", "AvailabilityZone" ],
      "shapeName" : "SendSSHPublicKeyRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SendSSHPublicKeyRequest",
        "variableName" : "sendSSHPublicKeyRequest",
        "variableType" : "SendSSHPublicKeyRequest",
        "documentation" : null,
        "simpleType" : "SendSSHPublicKeyRequest",
        "variableSetterType" : "SendSSHPublicKeyRequest"
      },
      "wrapper" : false
    },
    "SendSSHPublicKeyResult" : {
      "c2jName" : "SendSSHPublicKeyResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "enums" : null,
      "errorCode" : null,
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "RequestId",
        "c2jShape" : "RequestId",
        "deprecated" : false,
        "documentation" : "<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@param requestId The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestId",
        "getterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@return The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.*/",
        "getterMethodName" : "getRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "RequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "RequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@param requestId The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.*/",
        "setterMethodName" : "setRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@param requestId The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestId",
          "variableType" : "String",
          "documentation" : "<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "Success",
        "c2jShape" : "Success",
        "deprecated" : false,
        "documentation" : "<p>Indicates request success.</p>",
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates request success.</p>\n@param success Indicates request success.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSuccess",
        "getterDocumentation" : "/**<p>Indicates request success.</p>\n@return Indicates request success.*/",
        "getterMethodName" : "getSuccess",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "Success",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Success",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "Success",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates request success.</p>\n@param success Indicates request success.*/",
        "setterMethodName" : "setSuccess",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "success",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates request success.</p>\n@param success Indicates request success.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "success",
          "variableType" : "Boolean",
          "documentation" : "<p>Indicates request success.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RequestId" : {
          "c2jName" : "RequestId",
          "c2jShape" : "RequestId",
          "deprecated" : false,
          "documentation" : "<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@param requestId The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestId",
          "getterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@return The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.*/",
          "getterMethodName" : "getRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "RequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "RequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@param requestId The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.*/",
          "setterMethodName" : "setRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>\n@param requestId The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestId",
            "variableType" : "String",
            "documentation" : "<p>The request ID as logged by EC2 Connect. Please provide this when contacting AWS Support.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Success" : {
          "c2jName" : "Success",
          "c2jShape" : "Success",
          "deprecated" : false,
          "documentation" : "<p>Indicates request success.</p>",
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates request success.</p>\n@param success Indicates request success.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSuccess",
          "getterDocumentation" : "/**<p>Indicates request success.</p>\n@return Indicates request success.*/",
          "getterMethodName" : "getSuccess",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "Success",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Success",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "Success",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates request success.</p>\n@param success Indicates request success.*/",
          "setterMethodName" : "setSuccess",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "success",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates request success.</p>\n@param success Indicates request success.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "success",
            "variableType" : "Boolean",
            "documentation" : "<p>Indicates request success.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SendSSHPublicKeyResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SendSSHPublicKeyResult",
        "variableName" : "sendSSHPublicKeyResult",
        "variableType" : "SendSSHPublicKeyResult",
        "documentation" : null,
        "simpleType" : "SendSSHPublicKeyResult",
        "variableSetterType" : "SendSSHPublicKeyResult"
      },
      "wrapper" : false
    },
    "ServiceException" : {
      "c2jName" : "ServiceException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates that the service encountered an error. Follow the message's instructions and try again.</p>",
      "enums" : null,
      "errorCode" : "ServiceException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServiceException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServiceException",
        "variableName" : "serviceException",
        "variableType" : "ServiceException",
        "documentation" : null,
        "simpleType" : "ServiceException",
        "variableSetterType" : "ServiceException"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Indicates you have been making requests too frequently and have been throttled. Wait for a while and try again. If higher call volume is warranted contact AWS Support.</p>",
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : {
      "SendSSHPublicKey" : [ {
        "comments" : {
          "input" : {
            "AvailabilityZone" : "The zone where the instance was launched",
            "InstanceId" : "The instance ID to publish the key to.",
            "InstanceOSUser" : "This should be the user you wish to be when ssh-ing to the instance (eg, ec2-user@[instance IP])",
            "SSHPublicKey" : "This should be in standard OpenSSH format (ssh-rsa [key body])"
          },
          "output" : {
            "RequestId" : "This request ID should be provided when contacting AWS Support.",
            "Success" : "Should be true if the service does not return an error response."
          }
        },
        "description" : "The following example pushes a sample SSH public key to the EC2 instance i-abcd1234 in AZ us-west-2b for use by the instance OS user ec2-user.",
        "id" : "send-ssh-key-to-an-ec2-instance-1518124883100",
        "input" : {
          "InstanceId" : "i-abcd1234",
          "InstanceOSUser" : "ec2-user",
          "SSHPublicKey" : "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3FlHqj2eqCdrGHuA6dRjfZXQ4HX5lXEIRHaNbxEwE5Te7xNF7StwhrDtiV7IdT5fDqbRyGw/szPj3xGkNTVoElCZ2dDFb2qYZ1WLIpZwj/UhO9l2mgfjR56UojjQut5Jvn2KZ1OcyrNO0J83kCaJCV7JoVbXY79FBMUccYNY45zmv9+1FMCfY6i2jdIhwR6+yLk8oubL8lIPyq7X+6b9S0yKCkB7Peml1DvghlybpAIUrC9vofHt6XP4V1i0bImw1IlljQS+DUmULRFSccATDscCX9ajnj7Crhm0HAZC0tBPXpFdHkPwL3yzYo546SCS9LKEwz62ymxxbL9k7h09t",
          "AvailabilityZone" : "us-west-2a"
        },
        "output" : {
          "RequestId" : "abcd1234-abcd-1234-abcd-1234abcd1234",
          "Success" : true
        },
        "title" : "To push an SSH key to an EC2 instance"
      } ]
    },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2014-2019 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AWSEC2InstanceConnectException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.ec2instanceconnect.model.AWSEC2InstanceConnectException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.ec2instanceconnect.model.transform"
}